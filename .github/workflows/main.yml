name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: ./build-docker.sh
      - uses: actions/upload-artifact@v2
        with:
          name: JRE
          path: |
            *.ipk
            jre_*.tar.gz

  release-github:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Create GitHub Release
        run: gh release create "${GITHUB_REF#refs/tags/}" **/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-artifactory:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ARTIFACTORY_1: ${{ secrets.ARTIFACTORY_CLI_SECRET }}
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Upload
        run: |
          source versions.sh
          mvn install:install-file -DlocalRepositoryPath=mvn -Dfile=${IPK_NAME} -DgroupId=edu.wpi.first.jdk -DartifactId=roborio-${YEAR} -Dversion=${VER} -Dpackaging=ipk -DgeneratePom=true

          cd mvn
          jfrog rt u "*" thirdparty-mvn-release/ --exclusions="*maven-metadata-local*"
